@model XWebApplication.Models._XInModel

<label class="@Model.Class" for="@Model.Name" @Model.Required @Html.Raw(Model.Data)>
    @Model.Text.Substring(0, Model.AccessKeyIndex)<mark><u>@Model.Text[Model.AccessKeyIndex]</u></mark>@Model.Text.Substring(Model.AccessKeyIndex + 1)<mark><sup>[@Model.AccessKeyIndex]</sup></mark>
</label>
<datalist id="datalist-@Model.Name">
    @foreach(var keyValue in Model.XObjects)
    {
        <option value="@keyValue.Key">@keyValue.Value.XToString()</option>
    }
</datalist>
<input name="@Model.Name" 
       list="datalist-@Model.Name" 
       defaultValue="@Model.DefaultValue" 
       class="@Model.Class" @Model.Required @Html.Raw(Model.Data) 
       id="@Model.Id" 
       tabindex="@Model.TabIndex" 
       accesskey="@Model.AccessKey" 
       @Model.SpellCheck 
       @Model.ReadOnly 
       @Model.Required  
       ondrop="xondrop(event, this)" 
       ondragover="xondragover(event)" />