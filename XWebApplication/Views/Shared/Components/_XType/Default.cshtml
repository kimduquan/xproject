@model _XTypeModel
@using XSystem.XReflection
@using XSystem
@using XWebApplication.Models.XSystem
@using XWebApplication.Models.XSystem.XReflection

@{
    int tabIndex = 0;
    XObject xobj = null;
}

<nav>
    @foreach (XConstructorInfo xctor in Model.XConstructors)
    {
        <a href="@_XConstructorInfoModel.XToHref(Model.XType, xctor)">new @_XStringModel.XToString(Model.XType, null)</a>
    }
    @foreach (XMethodInfo xmethod in Model.XMethods)
    {
        <a href="@_XMethodInfoModel.XToHref(Model.XType, xmethod)">@_XStringModel.XToString(xmethod, null)</a>
    }
</nav>
<form method="post">
    @foreach (XType xtype in Model.XFieldTypes)
    {
        <fieldset>
            <legend>@_XStringModel.XToString(xtype, null)</legend>
            <table>
                <caption></caption>
                <colgroup>
                    <col />
                    <col />
                </colgroup>
                <thead></thead>
                <tbody>
                    @foreach (var xfield in Model.XFields[xtype.XFullName])
                    {
                        <tr>
                            <td></td>
                            <td>
                                @await Component.InvokeAsync("_XFieldInfo", new { xtype = Model.XType, xobject = xobj, field = xfield, key = Model.XAccessKeys[xfield.XName], index = tabIndex })
                                @{
                                    tabIndex++;
                                }
                            </td>
                        </tr>
                    }
                </tbody>
                <tfoot></tfoot>
            </table>
        </fieldset>
    }
    @foreach (XType xtype in Model.XPropertyTypes)
    {
        <fieldset>
            <legend>@_XStringModel.XToString(xtype, null)</legend>
            <table>
                <caption></caption>
                <colgroup>
                    <col />
                    <col />
                </colgroup>
                <thead></thead>
                <tbody>
                    @foreach (var xproperty in Model.XProperties[xtype.XFullName])
                    {
                        <tr>
                            <td></td>
                            <td>
                                @await Component.InvokeAsync("_XPropertyInfo", new { xtype = Model.XType, xobject = xobj, property = xproperty, key = Model.XAccessKeys[xproperty.XName], index = tabIndex })
                                @{
                                    tabIndex++;
                                }
                            </td>
                        </tr>
                    }
                </tbody>
                <tfoot></tfoot>
            </table>
        </fieldset>
    }
</form>