@page "/{namespace}/{type}"
@model XTypeModel

<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>@Model.XType.XName</title>
    </head>
    <body>
        <nav>
            @foreach (var xmethod in Model.XStaticMethods)
            {
                string href = Model.XGetHref(xmethod);
                <a href="@href"></a>
            }
        </nav>
        <ul>
            @foreach (var xfield in Model.XArrayFields)
            {

            }
        </ul>
        <form method="post">
            <fieldset>
                <legend>Fields :</legend>
                <table>
                    <caption></caption>
                    <colgroup>
                        <col />
                        <col />
                        <col />
                    </colgroup>
                    <thead></thead>
                    <tbody>
                        <tr>
                            <th>Name</th>
                            <th>Value</th>
                            <th></th>
                        </tr>
                        @{
                            int index = 0;
                        }
                        @foreach (var xfield in Model.XStaticFields)
                        {
                            string defVal = Model.XGetValue(xfield);
                            string value = defVal;
                            string autofocus = "";
                            if (index == 0)
                            {
                                autofocus = "autofocus";
                            }
                            string required = "";
                            string name = xfield.XName;
                            <tr>
                                <td>
                                    <label for="@name">@name</label>
                                </td>
                                <td>
                                    @if (xfield.XFieldType.Equals(typeof(bool)))
                                    {
                                        <input name="@name" type="checkbox" tabIndex="@index" defaultValue="@defVal" @required @autofocus />
                                    }
                                    else if (xfield.XFieldType.Equals(typeof(System.Drawing.Color)))
                                    {
                                        <input name="@name" type="color" tabIndex="@index" defaultValue="@defVal" @autofocus />
                                    }
                                    else if (xfield.XFieldType.Equals(typeof(DateTime)))
                                    {
                                        <input name="@name" type="datetime" tabIndex="@index" defaultValue="@defVal" @required @autofocus />
                                    }
                                    else if (xfield.XFieldType.Equals(typeof(System.IO.File)))
                                    {
                                        <input name="@name" type="file" tabIndex="@index" defaultValue="@defVal" @required @autofocus />
                                    }
                                    else if (xfield.XFieldType.Equals(typeof(float)))
                                    {
                                        <input name="@name" type="number" tabIndex="@index" defaultValue="@defVal" @required @autofocus />
                                    }
                                    else if (xfield.XFieldType.Equals(typeof(int)))
                                    {
                                        <input name="@name" type="number" tabIndex="@index" defaultValue="@defVal" @required @autofocus />
                                    }
                                    else if (xfield.XFieldType.Equals(typeof(string)))
                                    {
                                        <input name="@name" type="text" tabIndex="@index" defaultValue="@defVal" @required @autofocus />
                                    }
                                    else if (xfield.XFieldType.Equals(typeof(Uri)))
                                    {
                                        <input name="@name" type="url" tabIndex="@index" defaultValue="@defVal" @required @autofocus />
                                    }
                                    else if (xfield.XFieldType.XIsEnum)
                                    {
                                        <select name="@name" tabIndex="@index" @required @autofocus>
                                            <optgroup label="@xfield.XFieldType.XName">
                                                @{
                                                    foreach (string enumName in xfield.XFieldType.XGetEnumNames())
                                                    {
                                                        <option value="@enumName">@enumName</option>
                                                    }
                                                }
                                            </optgroup>
                                        </select>
                                    }
                                </td>
                                <td></td>
                                index++;
                            </tr>
                        }
                    </tbody>
                    <tfoot></tfoot>
                </table>
            </fieldset>
            <fieldset>
                <legend>Properties :</legend>
                <table>
                    <caption></caption>
                    <colgroup>
                        <col />
                        <col />
                        <col />
                    </colgroup>
                    <thead></thead>
                    <tbody>
                        <tr>
                            <th>Name</th>
                            <th>Value</th>
                            <th></th>
                        </tr>
                        @foreach (var xproperty in Model.XType.XGetProperties())
                        {
                            string defVal = Model.XGetValue(xproperty);
                            string value = defVal;
                            string autofocus = "";
                            if (index == 0)
                            {
                                autofocus = "autofocus";
                            }
                            string required = "";
                            string name = xproperty.XName;
                            <tr>
                                <td>
                                    <label for="@name">@name</label>
                                </td>
                                <td>
                                    @if (xproperty.XPropertyType.Equals(typeof(bool)))
                                    {
                                        <input name="@name" type="checkbox" tabIndex="@index" defaultValue="@defVal" @required @autofocus />
                                    }
                                    else if (xproperty.XPropertyType.Equals(typeof(System.Drawing.Color)))
                                    {
                                        <input name="@name" type="color" tabIndex="@index" defaultValue="@defVal" @autofocus />
                                    }
                                    else if (xproperty.XPropertyType.Equals(typeof(DateTime)))
                                    {
                                        <input name="@name" type="datetime" tabIndex="@index" defaultValue="@defVal" @required @autofocus />
                                    }
                                    else if (xproperty.XPropertyType.Equals(typeof(System.IO.File)))
                                    {
                                        <input name="@name" type="file" tabIndex="@index" defaultValue="@defVal" @required @autofocus />
                                    }
                                    else if (xproperty.XPropertyType.Equals(typeof(float)))
                                    {
                                        <input name="@name" type="number" tabIndex="@index" defaultValue="@defVal" @required @autofocus />
                                    }
                                    else if (xproperty.XPropertyType.Equals(typeof(int)))
                                    {
                                        <input name="@name" type="number" tabIndex="@index" defaultValue="@defVal" @required @autofocus />
                                    }
                                    else if (xproperty.XPropertyType.Equals(typeof(string)))
                                    {
                                        <input name="@name" type="text" tabIndex="@index" defaultValue="@defVal" @required @autofocus />
                                    }
                                    else if (xproperty.XPropertyType.Equals(typeof(Uri)))
                                    {
                                        <input name="@name" type="url" tabIndex="@index" defaultValue="@defVal" @required @autofocus />
                                    }
                                    else if (xproperty.XPropertyType.XIsEnum)
                                    {
                                        <select name="@name" tabIndex="@index" @required @autofocus>
                                            <optgroup label="@xproperty.XPropertyType.XName">
                                                @{
                                                    foreach (string enumName in xproperty.XPropertyType.XGetEnumNames())
                                                    {
                                                        <option value="@enumName">@enumName</option>
                                                    }
                                                }
                                            </optgroup>
                                        </select>
                                    }
                                </td>
                                <td></td>
                                index++;
                            </tr>
                        }
                    </tbody>
                    <tfoot></tfoot>
                </table>
            </fieldset>
            <time datetime="@DateTime.Now">@DateTime.Now</time>
            <progress />
            <input type="submit" title="Set" tabIndex="@index" />
            @{
                index++;
            }
            <input type="reset" title="Cancel" tabIndex="@index" />
        </form>
    </body>
</html>