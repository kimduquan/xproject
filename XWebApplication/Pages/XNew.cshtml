@page "/{namespace}/{type}/new"
@model XNewModel

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>New - @Model.XType.XName</title>
</head>
<body>
    <header></header>
    <form method="post">
        <fieldset>
            <legend>Parameters:</legend>
            <table>
                <caption></caption>
                <colgroup>
                    <col />
                    <col />
                    <col />
                </colgroup>
                <thead></thead>
                <tbody>
                    <tr>
                        <th>Name</th>
                        <th>Value</th>
                        <th></th>
                    </tr>
                    @{
                        int index = 0;
                    }
                    @foreach (var parameter in Model.XConstructor.XGetParameters())
                    {
                        string defVal = "";
                        if (parameter.XHasDefaultValue)
                        {
                            defVal = parameter.XDefaultValue.ToString();
                        }
                        string autofocus = "";
                        if (index == 0)
                        {
                            autofocus = "autofocus";
                        }
                        string required = "";
                        if (parameter.XIsOptional)
                        {
                            required = "required";
                        }
                        <tr>
                            <td>
                                <label for="@parameter.XName">@parameter.XName</label>
                            </td>
                            <td>
                                @if (parameter.XParameterType.Equals(typeof(bool)))
                                {
                                    <input name="@parameter.XName" type="checkbox" tabIndex="@index" defaultValue="@defVal" @required @autofocus />
                                }
                                else if (parameter.XParameterType.Equals(typeof(System.Drawing.Color)))
                                {
                                    <input name="@parameter.XName" type="color" tabIndex="@index" defaultValue="@defVal" @autofocus />
                                }
                                else if (parameter.XParameterType.Equals(typeof(DateTime)))
                                {
                                    <input name="@parameter.XName" type="datetime" tabIndex="@index" defaultValue="@defVal" @required @autofocus />
                                }
                                else if (parameter.XParameterType.Equals(typeof(System.IO.File)))
                                {
                                    <input name="@parameter.XName" type="file" tabIndex="@index" defaultValue="@defVal" @required @autofocus />
                                }
                                else if (parameter.XParameterType.Equals(typeof(float)))
                                {
                                    <input name="@parameter.XName" type="number" tabIndex="@index" defaultValue="@defVal" @required @autofocus />
                                }
                                else if (parameter.XParameterType.Equals(typeof(int)))
                                {
                                    <input name="@parameter.XName" type="number" tabIndex="@index" defaultValue="@defVal" @required @autofocus />
                                }
                                else if (parameter.XParameterType.Equals(typeof(string)))
                                {
                                    <input name="@parameter.XName" type="text" tabIndex="@index" defaultValue="@defVal" @required @autofocus />
                                }
                                else if (parameter.XParameterType.Equals(typeof(Uri)))
                                {
                                    <input name="@parameter.XName" type="url" tabIndex="@index" defaultValue="@defVal" @required @autofocus />
                                }
                                else if (parameter.XParameterType.XIsEnum)
                                {
                                    <select name="@parameter.XName" tabIndex="@index" @required @autofocus>
                                        <optgroup label="@parameter.XParameterType.XName">
                                            @{
                                                foreach (string enumName in parameter.XParameterType.XGetEnumNames())
                                                {
                                                    <option value="@enumName">@enumName</option>
                                                }
                                            }
                                        </optgroup>
                                    </select>
                                }
                            </td>
                            <td></td>
                            index++;
                        </tr>
                    }
                </tbody>
                <tfoot></tfoot>
            </table>
        </fieldset>
        <time datetime="@DateTime.Now">@DateTime.Now</time>
        <progress />
        <input type="submit" title="Invoke" tabIndex="@index" />
        @{
            index++;
        }
        <input type="reset" title="Cancel" tabIndex="@index" />
    </form>
    <footer></footer>
</body>
</html>