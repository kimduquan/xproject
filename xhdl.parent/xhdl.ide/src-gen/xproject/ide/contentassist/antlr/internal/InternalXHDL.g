/*
 * generated by Xtext 2.15.0
 */
grammar InternalXHDL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package xproject.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package xproject.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import xproject.services.XHDLGrammarAccess;

}
@parser::members {
	private XHDLGrammarAccess grammarAccess;

	public void setGrammarAccess(XHDLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRulexhdl
entryRulexhdl
:
{ before(grammarAccess.getXhdlRule()); }
	 rulexhdl
{ after(grammarAccess.getXhdlRule()); } 
	 EOF 
;

// Rule xhdl
rulexhdl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXhdlAccess().getPackagesAssignment()); }
		(rule__Xhdl__PackagesAssignment)*
		{ after(grammarAccess.getXhdlAccess().getPackagesAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXPackage
entryRuleXPackage
:
{ before(grammarAccess.getXPackageRule()); }
	 ruleXPackage
{ after(grammarAccess.getXPackageRule()); } 
	 EOF 
;

// Rule XPackage
ruleXPackage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXPackageAccess().getGroup()); }
		(rule__XPackage__Group__0)
		{ after(grammarAccess.getXPackageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXElement
entryRuleXElement
:
{ before(grammarAccess.getXElementRule()); }
	 ruleXElement
{ after(grammarAccess.getXElementRule()); } 
	 EOF 
;

// Rule XElement
ruleXElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXElementAccess().getAlternatives()); }
		(rule__XElement__Alternatives)
		{ after(grammarAccess.getXElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXAttribute
entryRuleXAttribute
:
{ before(grammarAccess.getXAttributeRule()); }
	 ruleXAttribute
{ after(grammarAccess.getXAttributeRule()); } 
	 EOF 
;

// Rule XAttribute
ruleXAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXAttributeAccess().getGroup()); }
		(rule__XAttribute__Group__0)
		{ after(grammarAccess.getXAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXSubType
entryRuleXSubType
:
{ before(grammarAccess.getXSubTypeRule()); }
	 ruleXSubType
{ after(grammarAccess.getXSubTypeRule()); } 
	 EOF 
;

// Rule XSubType
ruleXSubType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXSubTypeAccess().getGroup()); }
		(rule__XSubType__Group__0)
		{ after(grammarAccess.getXSubTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXSignal
entryRuleXSignal
:
{ before(grammarAccess.getXSignalRule()); }
	 ruleXSignal
{ after(grammarAccess.getXSignalRule()); } 
	 EOF 
;

// Rule XSignal
ruleXSignal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXSignalAccess().getGroup()); }
		(rule__XSignal__Group__0)
		{ after(grammarAccess.getXSignalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXType
entryRuleXType
:
{ before(grammarAccess.getXTypeRule()); }
	 ruleXType
{ after(grammarAccess.getXTypeRule()); } 
	 EOF 
;

// Rule XType
ruleXType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXTypeAccess().getAlternatives()); }
		(rule__XType__Alternatives)
		{ after(grammarAccess.getXTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXArray
entryRuleXArray
:
{ before(grammarAccess.getXArrayRule()); }
	 ruleXArray
{ after(grammarAccess.getXArrayRule()); } 
	 EOF 
;

// Rule XArray
ruleXArray 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXArrayAccess().getGroup()); }
		(rule__XArray__Group__0)
		{ after(grammarAccess.getXArrayAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXRange
entryRuleXRange
:
{ before(grammarAccess.getXRangeRule()); }
	 ruleXRange
{ after(grammarAccess.getXRangeRule()); } 
	 EOF 
;

// Rule XRange
ruleXRange 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXRangeAccess().getGroup()); }
		(rule__XRange__Group__0)
		{ after(grammarAccess.getXRangeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXUnits
entryRuleXUnits
:
{ before(grammarAccess.getXUnitsRule()); }
	 ruleXUnits
{ after(grammarAccess.getXUnitsRule()); } 
	 EOF 
;

// Rule XUnits
ruleXUnits 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXUnitsAccess().getGroup()); }
		(rule__XUnits__Group__0)
		{ after(grammarAccess.getXUnitsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXUnit
entryRuleXUnit
:
{ before(grammarAccess.getXUnitRule()); }
	 ruleXUnit
{ after(grammarAccess.getXUnitRule()); } 
	 EOF 
;

// Rule XUnit
ruleXUnit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXUnitAccess().getGroup()); }
		(rule__XUnit__Group__0)
		{ after(grammarAccess.getXUnitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXEnums
entryRuleXEnums
:
{ before(grammarAccess.getXEnumsRule()); }
	 ruleXEnums
{ after(grammarAccess.getXEnumsRule()); } 
	 EOF 
;

// Rule XEnums
ruleXEnums 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXEnumsAccess().getGroup()); }
		(rule__XEnums__Group__0)
		{ after(grammarAccess.getXEnumsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXElementAccess().getXTypeParserRuleCall_0()); }
		ruleXType
		{ after(grammarAccess.getXElementAccess().getXTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getXElementAccess().getXSignalParserRuleCall_1()); }
		ruleXSignal
		{ after(grammarAccess.getXElementAccess().getXSignalParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getXElementAccess().getXSubTypeParserRuleCall_2()); }
		ruleXSubType
		{ after(grammarAccess.getXElementAccess().getXSubTypeParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getXElementAccess().getXAttributeParserRuleCall_3()); }
		ruleXAttribute
		{ after(grammarAccess.getXElementAccess().getXAttributeParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXTypeAccess().getGroup_0()); }
		(rule__XType__Group_0__0)
		{ after(grammarAccess.getXTypeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getXTypeAccess().getXRangeParserRuleCall_1()); }
		ruleXRange
		{ after(grammarAccess.getXTypeAccess().getXRangeParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getXTypeAccess().getGroup_2()); }
		(rule__XType__Group_2__0)
		{ after(grammarAccess.getXTypeAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XPackage__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XPackage__Group__0__Impl
	rule__XPackage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XPackage__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXPackageAccess().getPackageKeyword_0()); }
	'package'
	{ after(grammarAccess.getXPackageAccess().getPackageKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XPackage__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XPackage__Group__1__Impl
	rule__XPackage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XPackage__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXPackageAccess().getNameAssignment_1()); }
	(rule__XPackage__NameAssignment_1)
	{ after(grammarAccess.getXPackageAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XPackage__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XPackage__Group__2__Impl
	rule__XPackage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XPackage__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXPackageAccess().getIsKeyword_2()); }
	'is'
	{ after(grammarAccess.getXPackageAccess().getIsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XPackage__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XPackage__Group__3__Impl
	rule__XPackage__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XPackage__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXPackageAccess().getElementsAssignment_3()); }
	(rule__XPackage__ElementsAssignment_3)*
	{ after(grammarAccess.getXPackageAccess().getElementsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XPackage__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XPackage__Group__4__Impl
	rule__XPackage__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__XPackage__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXPackageAccess().getEndKeyword_4()); }
	'end'
	{ after(grammarAccess.getXPackageAccess().getEndKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XPackage__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XPackage__Group__5__Impl
	rule__XPackage__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__XPackage__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXPackageAccess().getIDTerminalRuleCall_5()); }
	RULE_ID
	{ after(grammarAccess.getXPackageAccess().getIDTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XPackage__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XPackage__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XPackage__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXPackageAccess().getSemicolonKeyword_6()); }
	';'
	{ after(grammarAccess.getXPackageAccess().getSemicolonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XAttribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XAttribute__Group__0__Impl
	rule__XAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XAttribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXAttributeAccess().getAttributeAction_0()); }
	()
	{ after(grammarAccess.getXAttributeAccess().getAttributeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XAttribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XAttribute__Group__1__Impl
	rule__XAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XAttribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXAttributeAccess().getAttributeKeyword_1()); }
	'attribute'
	{ after(grammarAccess.getXAttributeAccess().getAttributeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XAttribute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XAttribute__Group__2__Impl
	rule__XAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XAttribute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXAttributeAccess().getIDTerminalRuleCall_2()); }
	RULE_ID
	{ after(grammarAccess.getXAttributeAccess().getIDTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XAttribute__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XAttribute__Group__3__Impl
	rule__XAttribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XAttribute__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXAttributeAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getXAttributeAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XAttribute__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XAttribute__Group__4__Impl
	rule__XAttribute__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__XAttribute__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXAttributeAccess().getIDTerminalRuleCall_4()); }
	RULE_ID
	{ after(grammarAccess.getXAttributeAccess().getIDTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XAttribute__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XAttribute__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAttribute__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXAttributeAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getXAttributeAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XSubType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XSubType__Group__0__Impl
	rule__XSubType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSubType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXSubTypeAccess().getSubtypeAction_0()); }
	()
	{ after(grammarAccess.getXSubTypeAccess().getSubtypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XSubType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XSubType__Group__1__Impl
	rule__XSubType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XSubType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXSubTypeAccess().getSubtypeKeyword_1()); }
	'subtype'
	{ after(grammarAccess.getXSubTypeAccess().getSubtypeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XSubType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XSubType__Group__2__Impl
	rule__XSubType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XSubType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXSubTypeAccess().getIDTerminalRuleCall_2()); }
	RULE_ID
	{ after(grammarAccess.getXSubTypeAccess().getIDTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XSubType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XSubType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSubType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXSubTypeAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getXSubTypeAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XSignal__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XSignal__Group__0__Impl
	rule__XSignal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSignal__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXSignalAccess().getSignalAction_0()); }
	()
	{ after(grammarAccess.getXSignalAccess().getSignalAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XSignal__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XSignal__Group__1__Impl
	rule__XSignal__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XSignal__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXSignalAccess().getSignalKeyword_1()); }
	'signal'
	{ after(grammarAccess.getXSignalAccess().getSignalKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XSignal__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XSignal__Group__2__Impl
	rule__XSignal__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XSignal__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXSignalAccess().getIDTerminalRuleCall_2()); }
	RULE_ID
	{ after(grammarAccess.getXSignalAccess().getIDTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XSignal__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XSignal__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSignal__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXSignalAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getXSignalAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XType__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XType__Group_0__0__Impl
	rule__XType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XType__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXTypeAccess().getTypeAction_0_0()); }
	()
	{ after(grammarAccess.getXTypeAccess().getTypeAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XType__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XType__Group_0__1__Impl
	rule__XType__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XType__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXTypeAccess().getTypeKeyword_0_1()); }
	'type'
	{ after(grammarAccess.getXTypeAccess().getTypeKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XType__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XType__Group_0__2__Impl
	rule__XType__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XType__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXTypeAccess().getNameAssignment_0_2()); }
	(rule__XType__NameAssignment_0_2)
	{ after(grammarAccess.getXTypeAccess().getNameAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XType__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XType__Group_0__3__Impl
	rule__XType__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XType__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXTypeAccess().getIsKeyword_0_3()); }
	'is'
	{ after(grammarAccess.getXTypeAccess().getIsKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XType__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XType__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XType__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXTypeAccess().getXEnumsParserRuleCall_0_4()); }
	ruleXEnums
	{ after(grammarAccess.getXTypeAccess().getXEnumsParserRuleCall_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XType__Group_2__0__Impl
	rule__XType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXTypeAccess().getXArrayParserRuleCall_2_0()); }
	ruleXArray
	{ after(grammarAccess.getXTypeAccess().getXArrayParserRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XType__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXTypeAccess().getSemicolonKeyword_2_1()); }
	';'
	{ after(grammarAccess.getXTypeAccess().getSemicolonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XArray__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XArray__Group__0__Impl
	rule__XArray__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XArray__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXArrayAccess().getArrayAction_0()); }
	()
	{ after(grammarAccess.getXArrayAccess().getArrayAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XArray__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XArray__Group__1__Impl
	rule__XArray__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XArray__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXArrayAccess().getArrayKeyword_1()); }
	'array'
	{ after(grammarAccess.getXArrayAccess().getArrayKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XArray__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XArray__Group__2__Impl
	rule__XArray__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XArray__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXArrayAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getXArrayAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XArray__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XArray__Group__3__Impl
	rule__XArray__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XArray__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXArrayAccess().getIDTerminalRuleCall_3()); }
	RULE_ID
	{ after(grammarAccess.getXArrayAccess().getIDTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XArray__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XArray__Group__4__Impl
	rule__XArray__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__XArray__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXArrayAccess().getRangeKeyword_4()); }
	'range'
	{ after(grammarAccess.getXArrayAccess().getRangeKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XArray__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XArray__Group__5__Impl
	rule__XArray__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__XArray__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXArrayAccess().getLessThanSignGreaterThanSignKeyword_5()); }
	'<>'
	{ after(grammarAccess.getXArrayAccess().getLessThanSignGreaterThanSignKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XArray__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XArray__Group__6__Impl
	rule__XArray__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__XArray__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXArrayAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getXArrayAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XArray__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XArray__Group__7__Impl
	rule__XArray__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__XArray__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXArrayAccess().getOfKeyword_7()); }
	'of'
	{ after(grammarAccess.getXArrayAccess().getOfKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XArray__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XArray__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XArray__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXArrayAccess().getIDTerminalRuleCall_8()); }
	RULE_ID
	{ after(grammarAccess.getXArrayAccess().getIDTerminalRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XRange__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XRange__Group__0__Impl
	rule__XRange__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XRange__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXRangeAccess().getRangeAction_0()); }
	()
	{ after(grammarAccess.getXRangeAccess().getRangeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XRange__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XRange__Group__1__Impl
	rule__XRange__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XRange__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXRangeAccess().getRangeKeyword_1()); }
	'range'
	{ after(grammarAccess.getXRangeAccess().getRangeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XRange__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XRange__Group__2__Impl
	rule__XRange__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XRange__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXRangeAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
	{ after(grammarAccess.getXRangeAccess().getINTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XRange__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XRange__Group__3__Impl
	rule__XRange__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XRange__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXRangeAccess().getToKeyword_3()); }
	'to'
	{ after(grammarAccess.getXRangeAccess().getToKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XRange__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XRange__Group__4__Impl
	rule__XRange__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__XRange__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXRangeAccess().getINTTerminalRuleCall_4()); }
	RULE_INT
	{ after(grammarAccess.getXRangeAccess().getINTTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XRange__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XRange__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XRange__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXRangeAccess().getXUnitsParserRuleCall_5()); }
	(ruleXUnits)?
	{ after(grammarAccess.getXRangeAccess().getXUnitsParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XUnits__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XUnits__Group__0__Impl
	rule__XUnits__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XUnits__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXUnitsAccess().getUnitsAction_0()); }
	()
	{ after(grammarAccess.getXUnitsAccess().getUnitsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XUnits__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XUnits__Group__1__Impl
	rule__XUnits__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XUnits__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXUnitsAccess().getUnitsKeyword_1()); }
	'units'
	{ after(grammarAccess.getXUnitsAccess().getUnitsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XUnits__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XUnits__Group__2__Impl
	rule__XUnits__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XUnits__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXUnitsAccess().getUnitsAssignment_2()); }
	(rule__XUnits__UnitsAssignment_2)*
	{ after(grammarAccess.getXUnitsAccess().getUnitsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XUnits__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XUnits__Group__3__Impl
	rule__XUnits__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XUnits__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXUnitsAccess().getEndKeyword_3()); }
	'end'
	{ after(grammarAccess.getXUnitsAccess().getEndKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XUnits__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XUnits__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XUnits__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXUnitsAccess().getUnitsKeyword_4()); }
	'units'
	{ after(grammarAccess.getXUnitsAccess().getUnitsKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XUnit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XUnit__Group__0__Impl
	rule__XUnit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XUnit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXUnitAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getXUnitAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XUnit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XUnit__Group__1__Impl
	rule__XUnit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XUnit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXUnitAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getXUnitAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XUnit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XUnit__Group__2__Impl
	rule__XUnit__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XUnit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXUnitAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
	{ after(grammarAccess.getXUnitAccess().getINTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XUnit__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XUnit__Group__3__Impl
	rule__XUnit__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XUnit__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXUnitAccess().getIDTerminalRuleCall_3()); }
	RULE_ID
	{ after(grammarAccess.getXUnitAccess().getIDTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XUnit__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XUnit__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XUnit__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXUnitAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getXUnitAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XEnums__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XEnums__Group__0__Impl
	rule__XEnums__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XEnums__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXEnumsAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getXEnumsAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XEnums__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XEnums__Group__1__Impl
	rule__XEnums__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XEnums__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXEnumsAccess().getGroup_1()); }
	(rule__XEnums__Group_1__0)*
	{ after(grammarAccess.getXEnumsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XEnums__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XEnums__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XEnums__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXEnumsAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getXEnumsAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XEnums__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XEnums__Group_1__0__Impl
	rule__XEnums__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XEnums__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXEnumsAccess().getCommaKeyword_1_0()); }
	(',')?
	{ after(grammarAccess.getXEnumsAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XEnums__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XEnums__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XEnums__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXEnumsAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getXEnumsAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Xhdl__PackagesAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXhdlAccess().getPackagesXPackageParserRuleCall_0()); }
		ruleXPackage
		{ after(grammarAccess.getXhdlAccess().getPackagesXPackageParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XPackage__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXPackageAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getXPackageAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XPackage__ElementsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXPackageAccess().getElementsXElementParserRuleCall_3_0()); }
		ruleXElement
		{ after(grammarAccess.getXPackageAccess().getElementsXElementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XType__NameAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXTypeAccess().getNameIDTerminalRuleCall_0_2_0()); }
		RULE_ID
		{ after(grammarAccess.getXTypeAccess().getNameIDTerminalRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XUnits__UnitsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXUnitsAccess().getUnitsXUnitParserRuleCall_2_0()); }
		ruleXUnit
		{ after(grammarAccess.getXUnitsAccess().getUnitsXUnitParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
