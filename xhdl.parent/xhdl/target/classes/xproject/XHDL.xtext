grammar xproject.XHDL with org.eclipse.xtext.common.Terminals hidden(WS, COMMENT)

generate xhdl "http://www.xproject.org/xhdl"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

xhdl:
	(packages+=XPackage)*
;

terminal COMMENT : '--' !('\n'|'\r')* ('\r'? '\n')?;
terminal XLONG returns ecore::ELong: '-'?('0'..'9')+;
terminal XDOUBLE returns ecore::EDouble: '[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?';

XPackageRef:
	{XPackageRef} name=ID
;

XPackage:
	'package' name=ID 'is' 
		(xis+=XElement)*
	'end' (xend=XPackageRef & ';')
;

XTypeRef:
	{XTypeRef} name=ID
;

XElement:
	XType | XSignal | XSubType | XAttribute | XImpure
;

XAttribute:
	{XAttribute} 'attribute' (name=ID & ':' & xtype=XTypeRef & ';')
;

XSubType:
	{XSubType} 'subtype' name=ID 'is' (xis=XTypeRef (xrange=XRange)? & ';')
;

XSignal:
	{XSignal} 'signal' (name=ID & ':' xtype=XTypeRef & (';=' & ID)? & ';')
;

XType:
	{XType} 'type' name=ID 'is' ((xenums=XEnums | xrange=XRange | xarray=XArray) & ';')
;

XArray:
	{XArray} 'array' ('(' & xrange=XTypeRef 'range' '<>' & ')') 'of' xof=XTypeRef
;

XRange:
	{XRange} 'range' xfrom=XRangeValue 'to' xto=XRangeValue (xunits=XUnits)?
;

XRangeValue:
	{XRangeValue} (((xlvalue=XLONG | xdvalue=XDOUBLE ) (xunit=XUnitRef)?) | (ID '\'' & ID))
;

XUnits:
	{XUnits} 'units' (xunits+=XUnit)* 'end' 'units'
;

XUnitRef:
	{XUnitRef} name=ID
;

XUnit:
	{XUnit} (name=ID ('=' & xvalue=INT xbased=XUnitRef)? & ';')
;

XEnums:
	{XEnums} ('(' & ( ','? & xenums+=XEnum)* & ')')
;

XFunctionRef:
	{XFunctionRef} 'function' name=ID 'return' xreturn=XTypeRef
;

XImpure:
	'impure' xfunc=XFunctionRef & ';'
;

XEnum:
	ID | STRING
;