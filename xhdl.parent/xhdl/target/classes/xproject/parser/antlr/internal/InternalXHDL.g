/*
 * generated by Xtext 2.15.0
 */
grammar InternalXHDL;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package xproject.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package xproject.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import xproject.services.XHDLGrammarAccess;

}

@parser::members {

 	private XHDLGrammarAccess grammarAccess;

    public InternalXHDLParser(TokenStream input, XHDLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "xhdl";
   	}

   	@Override
   	protected XHDLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRulexhdl
entryRulexhdl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXhdlRule()); }
	iv_rulexhdl=rulexhdl
	{ $current=$iv_rulexhdl.current; }
	EOF;

// Rule xhdl
rulexhdl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getXhdlAccess().getPackagesXPackageParserRuleCall_0());
			}
			lv_packages_0_0=ruleXPackage
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getXhdlRule());
				}
				add(
					$current,
					"packages",
					lv_packages_0_0,
					"xproject.XHDL.XPackage");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleXPackage
entryRuleXPackage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXPackageRule()); }
	iv_ruleXPackage=ruleXPackage
	{ $current=$iv_ruleXPackage.current; }
	EOF;

// Rule XPackage
ruleXPackage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXPackageAccess().getXPackageAction_0(),
					$current);
			}
		)
		otherlv_1='package'
		{
			newLeafNode(otherlv_1, grammarAccess.getXPackageAccess().getPackageKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getXPackageAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXPackageRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='is'
		{
			newLeafNode(otherlv_3, grammarAccess.getXPackageAccess().getIsKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getXPackageAccess().getXisXElementParserRuleCall_4_0());
				}
				lv_xis_4_0=ruleXElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXPackageRule());
					}
					add(
						$current,
						"xis",
						lv_xis_4_0,
						"xproject.XHDL.XElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='end'
		{
			newLeafNode(otherlv_5, grammarAccess.getXPackageAccess().getEndKeyword_5());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXPackageRule());
					}
				}
				otherlv_6=RULE_ID
				{
					newLeafNode(otherlv_6, grammarAccess.getXPackageAccess().getXendXPackageRefCrossReference_6_0());
				}
			)
		)
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getXPackageAccess().getSemicolonKeyword_7());
		}
	)
;

// Entry rule entryRuleXElement
entryRuleXElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXElementRule()); }
	iv_ruleXElement=ruleXElement
	{ $current=$iv_ruleXElement.current; }
	EOF;

// Rule XElement
ruleXElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getXElementAccess().getXTypeParserRuleCall_0());
		}
		this_XType_0=ruleXType
		{
			$current = $this_XType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXElementAccess().getXSignalParserRuleCall_1());
		}
		this_XSignal_1=ruleXSignal
		{
			$current = $this_XSignal_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXElementAccess().getXSubTypeParserRuleCall_2());
		}
		this_XSubType_2=ruleXSubType
		{
			$current = $this_XSubType_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXElementAccess().getXAttributeParserRuleCall_3());
		}
		this_XAttribute_3=ruleXAttribute
		{
			$current = $this_XAttribute_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXElementAccess().getXImpureParserRuleCall_4());
		}
		this_XImpure_4=ruleXImpure
		{
			$current = $this_XImpure_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleXAttribute
entryRuleXAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXAttributeRule()); }
	iv_ruleXAttribute=ruleXAttribute
	{ $current=$iv_ruleXAttribute.current; }
	EOF;

// Rule XAttribute
ruleXAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXAttributeAccess().getXAttributeAction_0(),
					$current);
			}
		)
		otherlv_1='attribute'
		{
			newLeafNode(otherlv_1, grammarAccess.getXAttributeAccess().getAttributeKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getXAttributeAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getXAttributeAccess().getColonKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXAttributeRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getXAttributeAccess().getXtypeXTypeRefCrossReference_4_0());
				}
			)
		)
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getXAttributeAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleXSubType
entryRuleXSubType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXSubTypeRule()); }
	iv_ruleXSubType=ruleXSubType
	{ $current=$iv_ruleXSubType.current; }
	EOF;

// Rule XSubType
ruleXSubType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXSubTypeAccess().getXSubTypeAction_0(),
					$current);
			}
		)
		otherlv_1='subtype'
		{
			newLeafNode(otherlv_1, grammarAccess.getXSubTypeAccess().getSubtypeKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getXSubTypeAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXSubTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='is'
		{
			newLeafNode(otherlv_3, grammarAccess.getXSubTypeAccess().getIsKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXSubTypeRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getXSubTypeAccess().getXisXTypeRefCrossReference_4_0());
				}
			)
		)
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getXSubTypeAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleXSignal
entryRuleXSignal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXSignalRule()); }
	iv_ruleXSignal=ruleXSignal
	{ $current=$iv_ruleXSignal.current; }
	EOF;

// Rule XSignal
ruleXSignal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXSignalAccess().getXSignalAction_0(),
					$current);
			}
		)
		otherlv_1='signal'
		{
			newLeafNode(otherlv_1, grammarAccess.getXSignalAccess().getSignalKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getXSignalAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXSignalRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getXSignalAccess().getColonKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXSignalRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getXSignalAccess().getXtypeXTypeRefCrossReference_4_0());
				}
			)
		)
		(
			otherlv_5=';='
			{
				newLeafNode(otherlv_5, grammarAccess.getXSignalAccess().getSemicolonEqualsSignKeyword_5_0());
			}
			this_ID_6=RULE_ID
			{
				newLeafNode(this_ID_6, grammarAccess.getXSignalAccess().getIDTerminalRuleCall_5_1());
			}
		)?
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getXSignalAccess().getSemicolonKeyword_6());
		}
	)
;

// Entry rule entryRuleXType
entryRuleXType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXTypeRule()); }
	iv_ruleXType=ruleXType
	{ $current=$iv_ruleXType.current; }
	EOF;

// Rule XType
ruleXType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getXTypeAccess().getXTypeAction_0_0(),
						$current);
				}
			)
			otherlv_1='type'
			{
				newLeafNode(otherlv_1, grammarAccess.getXTypeAccess().getTypeKeyword_0_1());
			}
			(
				(
					lv_name_2_0=RULE_ID
					{
						newLeafNode(lv_name_2_0, grammarAccess.getXTypeAccess().getNameIDTerminalRuleCall_0_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXTypeRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_3='is'
			{
				newLeafNode(otherlv_3, grammarAccess.getXTypeAccess().getIsKeyword_0_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getXTypeAccess().getXenumsXEnumsParserRuleCall_0_4_0());
					}
					lv_xenums_4_0=ruleXEnums
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXTypeRule());
						}
						set(
							$current,
							"xenums",
							lv_xenums_4_0,
							"xproject.XHDL.XEnums");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getXTypeAccess().getXrangeXRangeParserRuleCall_1_0());
				}
				lv_xrange_5_0=ruleXRange
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXTypeRule());
					}
					set(
						$current,
						"xrange",
						lv_xrange_5_0,
						"xproject.XHDL.XRange");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getXTypeAccess().getXarrayXArrayParserRuleCall_2_0_0());
					}
					lv_xarray_6_0=ruleXArray
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXTypeRule());
						}
						set(
							$current,
							"xarray",
							lv_xarray_6_0,
							"xproject.XHDL.XArray");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7=';'
			{
				newLeafNode(otherlv_7, grammarAccess.getXTypeAccess().getSemicolonKeyword_2_1());
			}
		)
	)
;

// Entry rule entryRuleXArray
entryRuleXArray returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXArrayRule()); }
	iv_ruleXArray=ruleXArray
	{ $current=$iv_ruleXArray.current; }
	EOF;

// Rule XArray
ruleXArray returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXArrayAccess().getXArrayAction_0(),
					$current);
			}
		)
		otherlv_1='array'
		{
			newLeafNode(otherlv_1, grammarAccess.getXArrayAccess().getArrayKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getXArrayAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXArrayRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getXArrayAccess().getXrangeXTypeRefCrossReference_3_0());
				}
			)
		)
		otherlv_4='range'
		{
			newLeafNode(otherlv_4, grammarAccess.getXArrayAccess().getRangeKeyword_4());
		}
		otherlv_5='<>'
		{
			newLeafNode(otherlv_5, grammarAccess.getXArrayAccess().getLessThanSignGreaterThanSignKeyword_5());
		}
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getXArrayAccess().getRightParenthesisKeyword_6());
		}
		otherlv_7='of'
		{
			newLeafNode(otherlv_7, grammarAccess.getXArrayAccess().getOfKeyword_7());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXArrayRule());
					}
				}
				otherlv_8=RULE_ID
				{
					newLeafNode(otherlv_8, grammarAccess.getXArrayAccess().getXofXTypeRefCrossReference_8_0());
				}
			)
		)
	)
;

// Entry rule entryRuleXRange
entryRuleXRange returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXRangeRule()); }
	iv_ruleXRange=ruleXRange
	{ $current=$iv_ruleXRange.current; }
	EOF;

// Rule XRange
ruleXRange returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXRangeAccess().getXRangeAction_0(),
					$current);
			}
		)
		otherlv_1='range'
		{
			newLeafNode(otherlv_1, grammarAccess.getXRangeAccess().getRangeKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXRangeRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getXRangeAccess().getXfromXRangeValueCrossReference_2_0());
				}
			)
		)
		otherlv_3='to'
		{
			newLeafNode(otherlv_3, grammarAccess.getXRangeAccess().getToKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXRangeRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getXRangeAccess().getXtoXRangeValueCrossReference_4_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getXRangeAccess().getXunitsXUnitsParserRuleCall_5_0());
				}
				lv_xunits_5_0=ruleXUnits
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXRangeRule());
					}
					set(
						$current,
						"xunits",
						lv_xunits_5_0,
						"xproject.XHDL.XUnits");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleXUnits
entryRuleXUnits returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXUnitsRule()); }
	iv_ruleXUnits=ruleXUnits
	{ $current=$iv_ruleXUnits.current; }
	EOF;

// Rule XUnits
ruleXUnits returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXUnitsAccess().getXUnitsAction_0(),
					$current);
			}
		)
		otherlv_1='units'
		{
			newLeafNode(otherlv_1, grammarAccess.getXUnitsAccess().getUnitsKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getXUnitsAccess().getXunitsXUnitParserRuleCall_2_0());
				}
				lv_xunits_2_0=ruleXUnit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXUnitsRule());
					}
					add(
						$current,
						"xunits",
						lv_xunits_2_0,
						"xproject.XHDL.XUnit");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='end'
		{
			newLeafNode(otherlv_3, grammarAccess.getXUnitsAccess().getEndKeyword_3());
		}
		otherlv_4='units'
		{
			newLeafNode(otherlv_4, grammarAccess.getXUnitsAccess().getUnitsKeyword_4());
		}
	)
;

// Entry rule entryRuleXUnit
entryRuleXUnit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXUnitRule()); }
	iv_ruleXUnit=ruleXUnit
	{ $current=$iv_ruleXUnit.current; }
	EOF;

// Rule XUnit
ruleXUnit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXUnitAccess().getXUnitAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getXUnitAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXUnitRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='='
			{
				newLeafNode(otherlv_2, grammarAccess.getXUnitAccess().getEqualsSignKeyword_2_0());
			}
			(
				(
					lv_xvalue_3_0=RULE_INT
					{
						newLeafNode(lv_xvalue_3_0, grammarAccess.getXUnitAccess().getXvalueINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXUnitRule());
						}
						setWithLastConsumed(
							$current,
							"xvalue",
							lv_xvalue_3_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXUnitRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getXUnitAccess().getXbasedXUnitRefCrossReference_2_2_0());
					}
				)
			)
		)?
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getXUnitAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleXEnums
entryRuleXEnums returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXEnumsRule()); }
	iv_ruleXEnums=ruleXEnums
	{ $current=$iv_ruleXEnums.current; }
	EOF;

// Rule XEnums
ruleXEnums returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXEnumsAccess().getXEnumsAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getXEnumsAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				otherlv_2=','
				{
					newLeafNode(otherlv_2, grammarAccess.getXEnumsAccess().getCommaKeyword_2_0());
				}
			)?
			(
				(
					lv_xenums_3_0=RULE_ID
					{
						newLeafNode(lv_xenums_3_0, grammarAccess.getXEnumsAccess().getXenumsIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXEnumsRule());
						}
						addWithLastConsumed(
							$current,
							"xenums",
							lv_xenums_3_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)*
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getXEnumsAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleXImpure
entryRuleXImpure returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXImpureRule()); }
	iv_ruleXImpure=ruleXImpure
	{ $current=$iv_ruleXImpure.current; }
	EOF;

// Rule XImpure
ruleXImpure returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='impure'
		{
			newLeafNode(otherlv_0, grammarAccess.getXImpureAccess().getImpureKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXImpureRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getXImpureAccess().getXfuncXFunctionRefCrossReference_1_0());
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getXImpureAccess().getSemicolonKeyword_2());
		}
	)
;

RULE_COMMENT : '--' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
