/**
 * generated by Xtext 2.15.0
 */
package xproject.xhdl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import xproject.xhdl.XRange;
import xproject.xhdl.XRangeValue;
import xproject.xhdl.XUnits;
import xproject.xhdl.XhdlPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>XRange</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link xproject.xhdl.impl.XRangeImpl#getXfrom <em>Xfrom</em>}</li>
 *   <li>{@link xproject.xhdl.impl.XRangeImpl#getXto <em>Xto</em>}</li>
 *   <li>{@link xproject.xhdl.impl.XRangeImpl#getXunits <em>Xunits</em>}</li>
 * </ul>
 *
 * @generated
 */
public class XRangeImpl extends MinimalEObjectImpl.Container implements XRange
{
  /**
   * The cached value of the '{@link #getXfrom() <em>Xfrom</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXfrom()
   * @generated
   * @ordered
   */
  protected XRangeValue xfrom;

  /**
   * The cached value of the '{@link #getXto() <em>Xto</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXto()
   * @generated
   * @ordered
   */
  protected XRangeValue xto;

  /**
   * The cached value of the '{@link #getXunits() <em>Xunits</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXunits()
   * @generated
   * @ordered
   */
  protected XUnits xunits;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected XRangeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return XhdlPackage.Literals.XRANGE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public XRangeValue getXfrom()
  {
    return xfrom;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetXfrom(XRangeValue newXfrom, NotificationChain msgs)
  {
    XRangeValue oldXfrom = xfrom;
    xfrom = newXfrom;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, XhdlPackage.XRANGE__XFROM, oldXfrom, newXfrom);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setXfrom(XRangeValue newXfrom)
  {
    if (newXfrom != xfrom)
    {
      NotificationChain msgs = null;
      if (xfrom != null)
        msgs = ((InternalEObject)xfrom).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - XhdlPackage.XRANGE__XFROM, null, msgs);
      if (newXfrom != null)
        msgs = ((InternalEObject)newXfrom).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - XhdlPackage.XRANGE__XFROM, null, msgs);
      msgs = basicSetXfrom(newXfrom, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XhdlPackage.XRANGE__XFROM, newXfrom, newXfrom));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public XRangeValue getXto()
  {
    return xto;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetXto(XRangeValue newXto, NotificationChain msgs)
  {
    XRangeValue oldXto = xto;
    xto = newXto;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, XhdlPackage.XRANGE__XTO, oldXto, newXto);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setXto(XRangeValue newXto)
  {
    if (newXto != xto)
    {
      NotificationChain msgs = null;
      if (xto != null)
        msgs = ((InternalEObject)xto).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - XhdlPackage.XRANGE__XTO, null, msgs);
      if (newXto != null)
        msgs = ((InternalEObject)newXto).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - XhdlPackage.XRANGE__XTO, null, msgs);
      msgs = basicSetXto(newXto, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XhdlPackage.XRANGE__XTO, newXto, newXto));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public XUnits getXunits()
  {
    return xunits;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetXunits(XUnits newXunits, NotificationChain msgs)
  {
    XUnits oldXunits = xunits;
    xunits = newXunits;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, XhdlPackage.XRANGE__XUNITS, oldXunits, newXunits);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setXunits(XUnits newXunits)
  {
    if (newXunits != xunits)
    {
      NotificationChain msgs = null;
      if (xunits != null)
        msgs = ((InternalEObject)xunits).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - XhdlPackage.XRANGE__XUNITS, null, msgs);
      if (newXunits != null)
        msgs = ((InternalEObject)newXunits).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - XhdlPackage.XRANGE__XUNITS, null, msgs);
      msgs = basicSetXunits(newXunits, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XhdlPackage.XRANGE__XUNITS, newXunits, newXunits));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case XhdlPackage.XRANGE__XFROM:
        return basicSetXfrom(null, msgs);
      case XhdlPackage.XRANGE__XTO:
        return basicSetXto(null, msgs);
      case XhdlPackage.XRANGE__XUNITS:
        return basicSetXunits(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case XhdlPackage.XRANGE__XFROM:
        return getXfrom();
      case XhdlPackage.XRANGE__XTO:
        return getXto();
      case XhdlPackage.XRANGE__XUNITS:
        return getXunits();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case XhdlPackage.XRANGE__XFROM:
        setXfrom((XRangeValue)newValue);
        return;
      case XhdlPackage.XRANGE__XTO:
        setXto((XRangeValue)newValue);
        return;
      case XhdlPackage.XRANGE__XUNITS:
        setXunits((XUnits)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case XhdlPackage.XRANGE__XFROM:
        setXfrom((XRangeValue)null);
        return;
      case XhdlPackage.XRANGE__XTO:
        setXto((XRangeValue)null);
        return;
      case XhdlPackage.XRANGE__XUNITS:
        setXunits((XUnits)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case XhdlPackage.XRANGE__XFROM:
        return xfrom != null;
      case XhdlPackage.XRANGE__XTO:
        return xto != null;
      case XhdlPackage.XRANGE__XUNITS:
        return xunits != null;
    }
    return super.eIsSet(featureID);
  }

} //XRangeImpl
