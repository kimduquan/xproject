/**
 * generated by Xtext 2.15.0
 */
package xproject.xhdl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import xproject.xhdl.XRangeValue;
import xproject.xhdl.XUnitRef;
import xproject.xhdl.XhdlPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>XRange Value</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link xproject.xhdl.impl.XRangeValueImpl#getXlvalue <em>Xlvalue</em>}</li>
 *   <li>{@link xproject.xhdl.impl.XRangeValueImpl#getXdvalue <em>Xdvalue</em>}</li>
 *   <li>{@link xproject.xhdl.impl.XRangeValueImpl#getXunit <em>Xunit</em>}</li>
 * </ul>
 *
 * @generated
 */
public class XRangeValueImpl extends MinimalEObjectImpl.Container implements XRangeValue
{
  /**
   * The default value of the '{@link #getXlvalue() <em>Xlvalue</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXlvalue()
   * @generated
   * @ordered
   */
  protected static final long XLVALUE_EDEFAULT = 0L;

  /**
   * The cached value of the '{@link #getXlvalue() <em>Xlvalue</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXlvalue()
   * @generated
   * @ordered
   */
  protected long xlvalue = XLVALUE_EDEFAULT;

  /**
   * The default value of the '{@link #getXdvalue() <em>Xdvalue</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXdvalue()
   * @generated
   * @ordered
   */
  protected static final double XDVALUE_EDEFAULT = 0.0;

  /**
   * The cached value of the '{@link #getXdvalue() <em>Xdvalue</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXdvalue()
   * @generated
   * @ordered
   */
  protected double xdvalue = XDVALUE_EDEFAULT;

  /**
   * The cached value of the '{@link #getXunit() <em>Xunit</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXunit()
   * @generated
   * @ordered
   */
  protected XUnitRef xunit;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected XRangeValueImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return XhdlPackage.Literals.XRANGE_VALUE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public long getXlvalue()
  {
    return xlvalue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setXlvalue(long newXlvalue)
  {
    long oldXlvalue = xlvalue;
    xlvalue = newXlvalue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XhdlPackage.XRANGE_VALUE__XLVALUE, oldXlvalue, xlvalue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public double getXdvalue()
  {
    return xdvalue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setXdvalue(double newXdvalue)
  {
    double oldXdvalue = xdvalue;
    xdvalue = newXdvalue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XhdlPackage.XRANGE_VALUE__XDVALUE, oldXdvalue, xdvalue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public XUnitRef getXunit()
  {
    return xunit;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetXunit(XUnitRef newXunit, NotificationChain msgs)
  {
    XUnitRef oldXunit = xunit;
    xunit = newXunit;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, XhdlPackage.XRANGE_VALUE__XUNIT, oldXunit, newXunit);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setXunit(XUnitRef newXunit)
  {
    if (newXunit != xunit)
    {
      NotificationChain msgs = null;
      if (xunit != null)
        msgs = ((InternalEObject)xunit).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - XhdlPackage.XRANGE_VALUE__XUNIT, null, msgs);
      if (newXunit != null)
        msgs = ((InternalEObject)newXunit).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - XhdlPackage.XRANGE_VALUE__XUNIT, null, msgs);
      msgs = basicSetXunit(newXunit, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XhdlPackage.XRANGE_VALUE__XUNIT, newXunit, newXunit));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case XhdlPackage.XRANGE_VALUE__XUNIT:
        return basicSetXunit(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case XhdlPackage.XRANGE_VALUE__XLVALUE:
        return getXlvalue();
      case XhdlPackage.XRANGE_VALUE__XDVALUE:
        return getXdvalue();
      case XhdlPackage.XRANGE_VALUE__XUNIT:
        return getXunit();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case XhdlPackage.XRANGE_VALUE__XLVALUE:
        setXlvalue((Long)newValue);
        return;
      case XhdlPackage.XRANGE_VALUE__XDVALUE:
        setXdvalue((Double)newValue);
        return;
      case XhdlPackage.XRANGE_VALUE__XUNIT:
        setXunit((XUnitRef)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case XhdlPackage.XRANGE_VALUE__XLVALUE:
        setXlvalue(XLVALUE_EDEFAULT);
        return;
      case XhdlPackage.XRANGE_VALUE__XDVALUE:
        setXdvalue(XDVALUE_EDEFAULT);
        return;
      case XhdlPackage.XRANGE_VALUE__XUNIT:
        setXunit((XUnitRef)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case XhdlPackage.XRANGE_VALUE__XLVALUE:
        return xlvalue != XLVALUE_EDEFAULT;
      case XhdlPackage.XRANGE_VALUE__XDVALUE:
        return xdvalue != XDVALUE_EDEFAULT;
      case XhdlPackage.XRANGE_VALUE__XUNIT:
        return xunit != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (xlvalue: ");
    result.append(xlvalue);
    result.append(", xdvalue: ");
    result.append(xdvalue);
    result.append(')');
    return result.toString();
  }

} //XRangeValueImpl
