/**
 * generated by Xtext 2.15.0
 */
package xproject.xhdl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import xproject.xhdl.XUnit;
import xproject.xhdl.XUnitRef;
import xproject.xhdl.XhdlPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>XUnit</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link xproject.xhdl.impl.XUnitImpl#getName <em>Name</em>}</li>
 *   <li>{@link xproject.xhdl.impl.XUnitImpl#getXvalue <em>Xvalue</em>}</li>
 *   <li>{@link xproject.xhdl.impl.XUnitImpl#getXbased <em>Xbased</em>}</li>
 * </ul>
 *
 * @generated
 */
public class XUnitImpl extends MinimalEObjectImpl.Container implements XUnit
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getXvalue() <em>Xvalue</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXvalue()
   * @generated
   * @ordered
   */
  protected static final int XVALUE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getXvalue() <em>Xvalue</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXvalue()
   * @generated
   * @ordered
   */
  protected int xvalue = XVALUE_EDEFAULT;

  /**
   * The cached value of the '{@link #getXbased() <em>Xbased</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXbased()
   * @generated
   * @ordered
   */
  protected XUnitRef xbased;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected XUnitImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return XhdlPackage.Literals.XUNIT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XhdlPackage.XUNIT__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getXvalue()
  {
    return xvalue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setXvalue(int newXvalue)
  {
    int oldXvalue = xvalue;
    xvalue = newXvalue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XhdlPackage.XUNIT__XVALUE, oldXvalue, xvalue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public XUnitRef getXbased()
  {
    return xbased;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetXbased(XUnitRef newXbased, NotificationChain msgs)
  {
    XUnitRef oldXbased = xbased;
    xbased = newXbased;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, XhdlPackage.XUNIT__XBASED, oldXbased, newXbased);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setXbased(XUnitRef newXbased)
  {
    if (newXbased != xbased)
    {
      NotificationChain msgs = null;
      if (xbased != null)
        msgs = ((InternalEObject)xbased).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - XhdlPackage.XUNIT__XBASED, null, msgs);
      if (newXbased != null)
        msgs = ((InternalEObject)newXbased).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - XhdlPackage.XUNIT__XBASED, null, msgs);
      msgs = basicSetXbased(newXbased, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XhdlPackage.XUNIT__XBASED, newXbased, newXbased));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case XhdlPackage.XUNIT__XBASED:
        return basicSetXbased(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case XhdlPackage.XUNIT__NAME:
        return getName();
      case XhdlPackage.XUNIT__XVALUE:
        return getXvalue();
      case XhdlPackage.XUNIT__XBASED:
        return getXbased();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case XhdlPackage.XUNIT__NAME:
        setName((String)newValue);
        return;
      case XhdlPackage.XUNIT__XVALUE:
        setXvalue((Integer)newValue);
        return;
      case XhdlPackage.XUNIT__XBASED:
        setXbased((XUnitRef)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case XhdlPackage.XUNIT__NAME:
        setName(NAME_EDEFAULT);
        return;
      case XhdlPackage.XUNIT__XVALUE:
        setXvalue(XVALUE_EDEFAULT);
        return;
      case XhdlPackage.XUNIT__XBASED:
        setXbased((XUnitRef)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case XhdlPackage.XUNIT__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case XhdlPackage.XUNIT__XVALUE:
        return xvalue != XVALUE_EDEFAULT;
      case XhdlPackage.XUNIT__XBASED:
        return xbased != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", xvalue: ");
    result.append(xvalue);
    result.append(')');
    return result.toString();
  }

} //XUnitImpl
