/**
 * generated by Xtext 2.15.0
 */
package xproject.xhdl.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import xproject.xhdl.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see xproject.xhdl.XhdlPackage
 * @generated
 */
public class XhdlSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static XhdlPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public XhdlSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = XhdlPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case XhdlPackage.XHDL:
      {
        xhdl xhdl = (xhdl)theEObject;
        T result = casexhdl(xhdl);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.XPACKAGE_REF:
      {
        XPackageRef xPackageRef = (XPackageRef)theEObject;
        T result = caseXPackageRef(xPackageRef);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.XPACKAGE:
      {
        XPackage xPackage = (XPackage)theEObject;
        T result = caseXPackage(xPackage);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.XTYPE_REF:
      {
        XTypeRef xTypeRef = (XTypeRef)theEObject;
        T result = caseXTypeRef(xTypeRef);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.XELEMENT:
      {
        XElement xElement = (XElement)theEObject;
        T result = caseXElement(xElement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.XATTRIBUTE:
      {
        XAttribute xAttribute = (XAttribute)theEObject;
        T result = caseXAttribute(xAttribute);
        if (result == null) result = caseXElement(xAttribute);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.XSUB_TYPE:
      {
        XSubType xSubType = (XSubType)theEObject;
        T result = caseXSubType(xSubType);
        if (result == null) result = caseXElement(xSubType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.XSIGNAL:
      {
        XSignal xSignal = (XSignal)theEObject;
        T result = caseXSignal(xSignal);
        if (result == null) result = caseXElement(xSignal);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.XTYPE:
      {
        XType xType = (XType)theEObject;
        T result = caseXType(xType);
        if (result == null) result = caseXElement(xType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.XARRAY:
      {
        XArray xArray = (XArray)theEObject;
        T result = caseXArray(xArray);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.XRANGE:
      {
        XRange xRange = (XRange)theEObject;
        T result = caseXRange(xRange);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.XRANGE_VALUE:
      {
        XRangeValue xRangeValue = (XRangeValue)theEObject;
        T result = caseXRangeValue(xRangeValue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.XUNITS:
      {
        XUnits xUnits = (XUnits)theEObject;
        T result = caseXUnits(xUnits);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.XUNIT_REF:
      {
        XUnitRef xUnitRef = (XUnitRef)theEObject;
        T result = caseXUnitRef(xUnitRef);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.XUNIT:
      {
        XUnit xUnit = (XUnit)theEObject;
        T result = caseXUnit(xUnit);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.XENUMS:
      {
        XEnums xEnums = (XEnums)theEObject;
        T result = caseXEnums(xEnums);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.XFUNCTION:
      {
        XFunction xFunction = (XFunction)theEObject;
        T result = caseXFunction(xFunction);
        if (result == null) result = caseXElement(xFunction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.XIMPURE:
      {
        XImpure xImpure = (XImpure)theEObject;
        T result = caseXImpure(xImpure);
        if (result == null) result = caseXElement(xImpure);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.XENUM:
      {
        XEnum xEnum = (XEnum)theEObject;
        T result = caseXEnum(xEnum);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.XACCESS:
      {
        XAccess xAccess = (XAccess)theEObject;
        T result = caseXAccess(xAccess);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.XFILE_OF:
      {
        XFileOf xFileOf = (XFileOf)theEObject;
        T result = caseXFileOf(xFileOf);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.XPARAMETER:
      {
        XParameter xParameter = (XParameter)theEObject;
        T result = caseXParameter(xParameter);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.XPROCEDURE:
      {
        XProcedure xProcedure = (XProcedure)theEObject;
        T result = caseXProcedure(xProcedure);
        if (result == null) result = caseXElement(xProcedure);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.XINPUT:
      {
        XInput xInput = (XInput)theEObject;
        T result = caseXInput(xInput);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.XFILE_REF:
      {
        XFileRef xFileRef = (XFileRef)theEObject;
        T result = caseXFileRef(xFileRef);
        if (result == null) result = caseXInput(xFileRef);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.XINPUTS:
      {
        XInputs xInputs = (XInputs)theEObject;
        T result = caseXInputs(xInputs);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.XPARAMETERS:
      {
        XParameters xParameters = (XParameters)theEObject;
        T result = caseXParameters(xParameters);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.XFILE:
      {
        XFile xFile = (XFile)theEObject;
        T result = caseXFile(xFile);
        if (result == null) result = caseXFileOf(xFile);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>xhdl</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>xhdl</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casexhdl(xhdl object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XPackage Ref</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XPackage Ref</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXPackageRef(XPackageRef object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XPackage</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XPackage</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXPackage(XPackage object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XType Ref</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XType Ref</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXTypeRef(XTypeRef object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XElement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XElement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXElement(XElement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XAttribute</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XAttribute</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXAttribute(XAttribute object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XSub Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XSub Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXSubType(XSubType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XSignal</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XSignal</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXSignal(XSignal object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XType</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XType</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXType(XType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XArray</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XArray</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXArray(XArray object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XRange</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XRange</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXRange(XRange object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XRange Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XRange Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXRangeValue(XRangeValue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XUnits</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XUnits</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXUnits(XUnits object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XUnit Ref</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XUnit Ref</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXUnitRef(XUnitRef object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XUnit</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XUnit</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXUnit(XUnit object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XEnums</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XEnums</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXEnums(XEnums object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XFunction</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XFunction</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXFunction(XFunction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XImpure</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XImpure</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXImpure(XImpure object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XEnum</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XEnum</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXEnum(XEnum object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XAccess</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XAccess</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXAccess(XAccess object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XFile Of</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XFile Of</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXFileOf(XFileOf object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XParameter</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XParameter</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXParameter(XParameter object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XProcedure</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XProcedure</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXProcedure(XProcedure object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XInput</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XInput</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXInput(XInput object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XFile Ref</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XFile Ref</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXFileRef(XFileRef object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XInputs</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XInputs</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXInputs(XInputs object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XParameters</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XParameters</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXParameters(XParameters object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XFile</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XFile</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXFile(XFile object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //XhdlSwitch
