/**
 * generated by Xtext 2.15.0
 */
package xproject.xhdl.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import xproject.xhdl.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see xproject.xhdl.XhdlPackage
 * @generated
 */
public class XhdlSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static XhdlPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public XhdlSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = XhdlPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case XhdlPackage.XHDL:
      {
        xhdl xhdl = (xhdl)theEObject;
        T result = casexhdl(xhdl);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.XPACKAGE:
      {
        XPackage xPackage = (XPackage)theEObject;
        T result = caseXPackage(xPackage);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.XELEMENT:
      {
        XElement xElement = (XElement)theEObject;
        T result = caseXElement(xElement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.XATTRIBUTE:
      {
        XAttribute xAttribute = (XAttribute)theEObject;
        T result = caseXAttribute(xAttribute);
        if (result == null) result = caseXElement(xAttribute);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.XSUB_TYPE:
      {
        XSubType xSubType = (XSubType)theEObject;
        T result = caseXSubType(xSubType);
        if (result == null) result = caseXElement(xSubType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.XSIGNAL:
      {
        XSignal xSignal = (XSignal)theEObject;
        T result = caseXSignal(xSignal);
        if (result == null) result = caseXElement(xSignal);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.XTYPE:
      {
        XType xType = (XType)theEObject;
        T result = caseXType(xType);
        if (result == null) result = caseXElement(xType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.XARRAY:
      {
        XArray xArray = (XArray)theEObject;
        T result = caseXArray(xArray);
        if (result == null) result = caseXType(xArray);
        if (result == null) result = caseXElement(xArray);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.XRANGE:
      {
        XRange xRange = (XRange)theEObject;
        T result = caseXRange(xRange);
        if (result == null) result = caseXType(xRange);
        if (result == null) result = caseXElement(xRange);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.XUNITS:
      {
        XUnits xUnits = (XUnits)theEObject;
        T result = caseXUnits(xUnits);
        if (result == null) result = caseXRange(xUnits);
        if (result == null) result = caseXType(xUnits);
        if (result == null) result = caseXElement(xUnits);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.ATTRIBUTE:
      {
        attribute attribute = (attribute)theEObject;
        T result = caseattribute(attribute);
        if (result == null) result = caseXAttribute(attribute);
        if (result == null) result = caseXElement(attribute);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.SUBTYPE:
      {
        subtype subtype = (subtype)theEObject;
        T result = casesubtype(subtype);
        if (result == null) result = caseXSubType(subtype);
        if (result == null) result = caseXElement(subtype);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.SIGNAL:
      {
        signal signal = (signal)theEObject;
        T result = casesignal(signal);
        if (result == null) result = caseXSignal(signal);
        if (result == null) result = caseXElement(signal);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.TYPE:
      {
        type type = (type)theEObject;
        T result = casetype(type);
        if (result == null) result = caseXType(type);
        if (result == null) result = caseXElement(type);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.ARRAY:
      {
        array array = (array)theEObject;
        T result = casearray(array);
        if (result == null) result = caseXArray(array);
        if (result == null) result = caseXType(array);
        if (result == null) result = caseXElement(array);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.RANGE:
      {
        range range = (range)theEObject;
        T result = caserange(range);
        if (result == null) result = caseXRange(range);
        if (result == null) result = caseXType(range);
        if (result == null) result = caseXElement(range);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case XhdlPackage.UNITS:
      {
        units units = (units)theEObject;
        T result = caseunits(units);
        if (result == null) result = caseXUnits(units);
        if (result == null) result = caseXRange(units);
        if (result == null) result = caseXType(units);
        if (result == null) result = caseXElement(units);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>xhdl</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>xhdl</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casexhdl(xhdl object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XPackage</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XPackage</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXPackage(XPackage object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XElement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XElement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXElement(XElement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XAttribute</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XAttribute</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXAttribute(XAttribute object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XSub Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XSub Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXSubType(XSubType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XSignal</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XSignal</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXSignal(XSignal object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XType</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XType</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXType(XType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XArray</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XArray</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXArray(XArray object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XRange</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XRange</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXRange(XRange object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XUnits</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XUnits</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXUnits(XUnits object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>attribute</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>attribute</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseattribute(attribute object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>subtype</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>subtype</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casesubtype(subtype object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>signal</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>signal</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casesignal(signal object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casetype(type object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>array</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>array</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casearray(array object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>range</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>range</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caserange(range object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>units</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>units</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseunits(units object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //XhdlSwitch
